
package forumdb.EntitiesFrames.Pass;

import EntitiesClasses.Pass;
import EntitiesClasses.Appointment;
import EntitiesClasses.Doctor;
import EntitiesClasses.Service;
import forumdb.EntitiesFrames.User.NewUser;
import forumdb.EntitiesFrames.Appointment.AppointmentModel;
import forumdb.EntitiesFrames.Doctor.DoctorModel;
import forumdb.EntitiesFrames.Service.ServiceModel;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.text.AbstractDocument;

public class NewPass extends javax.swing.JDialog {

    Connection c;
    Pass editItem;
    PassModel model;

    public NewPass(java.awt.Frame parent, boolean modal, Connection c) {
        super(parent, modal);
        initComponents();
        this.c = c;
        model = new PassModel(c);
        combos();
    }

    public NewPass(java.awt.Frame parent, boolean modal, Connection c, Pass u) {
        super(parent, modal);
        initComponents();
        this.c = c;
        editItem = u;  
        model = new PassModel(c);      
        combos();
        fillFields();
    }
    
    private void combos() {
        appointmentBox.setModel(new DefaultComboBoxModel(model.getModelAppointment().getList().toArray()));
        doctorBox.setModel(new DefaultComboBoxModel(model.getModelDoctor().getList().toArray()));
        serviceBox.setModel(new DefaultComboBoxModel(model.getModelService().getList().toArray()));
    }

    private void fillFields() {
        timeField.setText(editItem.getTime());
        for (Appointment s : model.getModelAppointment().getList()) {
            if (s.getId_appointment()== editItem.getId_appointment()) {
                appointmentBox.setSelectedItem((s));
            }
        }
        for (Doctor s : model.getModelDoctor().getList()) {
            if (s.getId_doctor()== editItem.getId_doctor()) {
                doctorBox.setSelectedItem((s));
            }
        }
        for (Service s : model.getModelService().getList()) {
            if (s.getId_service()== editItem.getId_service()) {
                doctorBox.setSelectedItem((s));
            }
        }
    }

    public boolean check() {
        if ("".equals(timeField.getText())) {
            JOptionPane.showMessageDialog(new JFrame(), "Name cannot be empty");
            return false;
        }
        Pattern p = Pattern.compile("([0-9]|1[0-9]|2[0-4]):[0-5][0-9]");
        Matcher m = p.matcher(timeField.getText());
        if (!m.matches()) {
            JOptionPane.showMessageDialog(new JFrame(), "Time has wrong format");
            return false;
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        appointmentBox = new javax.swing.JComboBox<>();
        doctorBox = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        timeField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        serviceBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("New pass");

        appointmentBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appointmentBoxActionPerformed(evt);
            }
        });

        jButton1.setText("Done");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Time");

        jLabel3.setText("Appointment");

        jLabel4.setText("Doctor");

        timeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeFieldActionPerformed(evt);
            }
        });

        jLabel5.setText("Service");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(appointmentBox, 0, 293, Short.MAX_VALUE)
                            .addComponent(doctorBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(timeField)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(44, 44, 44)
                        .addComponent(serviceBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(appointmentBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(doctorBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(serviceBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(timeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void appointmentBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appointmentBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_appointmentBoxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (!check()) {
            return;
        }
        try {
            // TODO add your handling code here:
            if (editItem == null) {
                model.insert(new Pass(0, ((Appointment) appointmentBox.getSelectedItem()).getId_appointment(), 
                        ((Doctor) doctorBox.getSelectedItem()).getId_doctor(), 
                        ((Service) serviceBox.getSelectedItem()).getId_service(), timeField.getText() ));
            } else {
                model.update(new Pass(editItem.getId_pass(), ((Appointment) appointmentBox.getSelectedItem()).getId_appointment(), 
                        ((Doctor) doctorBox.getSelectedItem()).getId_doctor(), 
                        ((Service) serviceBox.getSelectedItem()).getId_service(), timeField.getText()));
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(new JFrame(), ex.getMessage());
            return;
        }
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void timeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeFieldActionPerformed

 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> appointmentBox;
    private javax.swing.JComboBox<String> doctorBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JComboBox<String> serviceBox;
    private javax.swing.JTextField timeField;
    // End of variables declaration//GEN-END:variables
}
